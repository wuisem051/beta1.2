rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Reglas para colecciones públicas (sin autenticación)
    match /settings/{document} {
      allow read, list: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /news/{document} {
      allow read, list: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    match /poolConfig/{document} {
      allow read, list: if true;
    }
    match /profitabilitySettings/{document} {
      allow read, list: if true;
    }
    match /performanceStats/{document} {
      allow read, list: if true;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Reglas para colecciones que requieren autenticación
    match /users/{userId} {
      allow read, update: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /miners/{minerId} {
      allow read, create, update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
      allow list: if request.auth != null; // Permitir listar todos los mineros para usuarios autenticados
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /userBalances/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /withdrawals/{withdrawalId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /arbitragePools/{poolId} {
      allow read: if true;
      // Asumiendo que hay un campo 'ownerId' en arbitragePools
      allow write: if request.auth != null && request.auth.uid == request.resource.data.ownerId;
      allow write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /userArbitragePools/{userId}/{poolId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /payments/{paymentId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if false;
      allow read: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    match /contactRequests/{ticketId} {
      allow read, create, update: if request.auth != null && request.auth.uid == resource.data.userId;
      allow read, update: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Regla general para cualquier otra colección (denegar todo)
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
